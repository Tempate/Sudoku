#include <iostream>
#include <cassert>
#include <array>
#include <vector>

#include "../src/board.h"
#include "../src/solver.h"

void test_solver() {
    static const std::vector<std::array<std::array<int, WIDTH>, HEIGHT>> board_values = {{
        {{
            {0,0,3,0,0,1,7,2,0},
            {0,0,0,0,0,4,0,0,0},
            {0,0,0,7,0,0,1,4,9},
            {0,1,4,8,0,0,0,0,5},
            {2,8,0,0,0,0,0,7,4},
            {7,0,0,0,0,2,6,8,0},
            {9,5,2,0,0,8,0,0,0},
            {0,0,0,3,0,0,0,0,0},
            {0,6,7,9,0,0,4,0,0}
        }}, {{
            {0,0,5,8,0,0,0,0,7},
            {4,0,0,0,0,0,0,0,0},
            {0,0,0,0,3,0,0,2,8},
            {2,0,0,0,0,4,5,0,0},
            {0,0,4,0,0,0,0,0,0},
            {0,0,0,0,7,6,0,3,0},
            {8,0,1,7,0,0,4,0,0},
            {0,0,2,1,8,0,0,0,0},
            {7,0,0,0,0,0,3,8,0}
        }}, {{
            {0,0,0,2,0,0,0,0,0},
            {0,0,0,0,0,8,4,0,0},
            {0,7,0,4,0,0,8,9,0},
            {0,0,0,0,5,0,0,1,0},
            {0,1,0,0,0,0,0,0,0},
            {0,0,3,0,0,6,0,0,2},
            {0,3,0,0,0,5,7,0,8},
            {8,0,0,0,3,0,0,0,0},
            {0,6,1,0,0,0,0,4,0}
        }}, {{
            {0,2,4,0,0,0,0,0,0},
            {0,0,0,0,0,7,1,0,0},
            {0,9,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,8,4},
            {0,0,0,0,7,5,0,0,0},
            {6,0,0,0,3,0,0,0,0},
            {0,0,0,4,0,0,0,2,9},
            {0,0,0,2,0,0,3,0,0},
            {1,0,0,0,0,0,0,0,0}
        }}
    }};

    for (const auto value : board_values) {
        Board board{value};
        solve(board);

        assert(board.complete());
        assert(board.check());
    }

    std::cout << "[+] Successfully completed 4 solving tests" << std::endl;
}
